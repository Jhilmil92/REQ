@model IEnumerable<Domain.Classes.Job>

@{
    ViewBag.Title = "View Jobs";
}
@*<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.16/css/jquery.dataTables.css">*@
<link href="~/Content/themes/jobstyles.css" rel="stylesheet" />
<script src="~/Content/themes/datatables.js"></script>
<h2>View Jobs</h2>

<table id="example" class="table table-striped table-bordered hover" style="width:100%">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.JobTitle)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.JobDescription)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ReleaseVersion)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.JobCategory)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedOn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UpdatedOn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ReportedBy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EstimatedTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ActualTimeTaken)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AssignedTo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.JobPriority)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
            </th>
        </tr>
    </thead>
    <tbody>

        @foreach (var item in Model)
        {

            var priorityLevel = ((Req.Enums.PriorityLevel)item.JobPriority).ToString();
            var jobCategory = ((Req.Enums.JobCategory)item.JobCategory).ToString();
            var jobStatus = ((Req.Enums.JobStatus)item.Status).ToString();
            var createdOn = string.Format("{0:d-MMM-yyyy h:mm tt}", item.CreatedOn.Value);
            var lastUpdatedOn = (item.UpdatedOn == null) ? string.Format("{0:d-MMM-yyyy h:mm tt}", (DateTime.Now)) : string.Format("{0:d-MMM-yyyy h:mm tt}", item.UpdatedOn.Value);
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.JobTitle)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.JobDescription)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReleaseVersion)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => jobCategory)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => createdOn)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => lastUpdatedOn)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => (item.ReportedBy.StakeHolderOrganization))
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EstimatedTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ActualTimeTaken)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AssignedTo.TakerName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => priorityLevel)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => jobStatus)
                </td>
                <td>
                    <u>@Html.ActionLink("Edit", "EditJob", "Job", new { jobId = item.JobId }, null)</u>
                </td>
            </tr>
        }
    </tbody>

</table>

<div>
    @Html.ActionLink("Back to List", "TakerInformation", "Taker")
</div>

<script>
    $(document).ready( function(){
        $('#example').DataTable({
            //"order": [[9, "asc"],[2,"asc"]]
            "columnDefs" : [
                { "orderData": [2,9], "targets": [2,9]},
               // { "orderData" : [9] , "targets" : 2}
            ]
        });
    }
    );

    //$('.secondRowSet:nth-child(even)').css('background-color', '#a69de1')
    //$('.secondRowSet:nth-child(odd)').css('background-color', '#dcd8f3')
</script>
