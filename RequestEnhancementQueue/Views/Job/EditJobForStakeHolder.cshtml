@model Domain.Classes.Req.Domain.ViewModels.UpdateStakeHolderJobViewModel

@{
    ViewBag.Title = "Edit Job For StakeHolder";
}

<h2>Edit Job</h2>


@using (Html.BeginForm("EditJobForStakeHolder", "Job", FormMethod.Post, new { encType = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal beige-color">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            <div class="col-md-10">
                @Html.EditorFor(model => model.JobId, new { htmlAttributes = new { @class = "form-control", type = "hidden" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.JobTitle, "Job Title", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.JobTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.JobTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.JobDescription, "Job Description", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.JobDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.JobDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EstimatedTimeInHours, "Estimated Time", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EstimatedTimeInHours, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = 0 } })
                @Html.ValidationMessageFor(model => model.EstimatedTimeInHours, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.JobType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.JobType, "Select a Job Type", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.JobType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AssignedTakerId, "Assign/Reassign Taker", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.AssignedTakerId, new SelectList(ViewBag.Takers, "TakerId", "TakerName"), "Select a Taker")
                @Html.ValidationMessageFor(model => model.AssignedTakerId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReleaseVersion, "Release Version", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReleaseVersion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReleaseVersion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Files, "Upload Files", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Files, new { @class = "form-control", type = "file", @multiple = "multiple" })
                @Html.ValidationMessageFor(model => model.Files, "", new { @class = "text-danger" })
                @ViewBag.UploadStatus
            </div>
        </div>

        <br />
        <div class="fileNames">
            <text><b><u>Uploaded Files :- </u></b></text>
            <br />
            <br />
            @if (Model.FileNames != null && Model.FileNames.Count() != 0)
            {
                <table>
                    <b>
                        <thead>
                    <th>
                        Filename
                    </th>
                    </thead>
                    </b>

                    <tbody>
                        @foreach (var fileName in Model.FileNames)
                        {
                            var fileNameFromPath = fileName.Split('\\');
                            <tr>
                                <td>
                                    @fileNameFromPath[fileNameFromPath.Length - 1]
                                </td>
                                <td> </td>
                                <td>
                                    <u>@Html.ActionLink("View", "ViewFile", "File", new { jobId = Model.JobId, requiredFileName = fileNameFromPath[fileNameFromPath.Length - 1] }, new { @class = "view-file" })</u>
                                </td>
                                <td></td>
                                <td>
                                    <u>@Html.ActionLink("Download", "DownloadFile", "File", new { jobId = Model.JobId, requiredFileName = fileNameFromPath[fileNameFromPath.Length - 1] }, new { @class = "download-file" })</u>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                @:<text>No uploaded files available</text>
                }

        </div>
        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Reported Jobs List", "ViewReportedRequests", "ReportRequest", null, new { @class = "footer-style" })
</div>

<style>
.view-file,.download-file,.footer-style
    {
        color : beige;
        font-weight : bold;
        font-size : large;
        text-shadow : 3px 3px 0px #000;
    }
</style>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
